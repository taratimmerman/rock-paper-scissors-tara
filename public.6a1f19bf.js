const e=[{name:"rock",beats:["scissors"]},{name:"paper",beats:["rock"]},{name:"scissors",beats:["paper"]}];class t{constructor(){this.state={scores:{player:0,computer:0},moves:{player:"",computer:""},roundNumber:1},this.state.scores.player=this.getScoreFromStorage("player"),this.state.scores.computer=this.getScoreFromStorage("computer"),this.state.roundNumber=this.getRoundNumberFromStorage()}evaluateRound(){let t=this.getPlayerMove(),o=this.getComputerMove();if(!t||!o)return"Invalid round";if(t===o)return"It's a tie!";let s=e.find(e=>e.name===t);return(null==s?void 0:s.beats.includes(o))?(this.setScore("player",this.getScore("player")+1),"You win!"):(this.setScore("computer",this.getScore("computer")+1),"Computer wins!")}getScoreFromStorage(e){return parseInt(localStorage.getItem(`${e}Score`)||"0",10)}getScore(e){return this.state.scores[e]}setScore(e,t){this.state.scores[e]=t,localStorage.setItem(`${e}Score`,t.toString())}setPlayerMove(e){this.state.moves.player=e}getPlayerMove(){return this.state.moves.player}resetMoves(){this.state.moves.player=""}setComputerMove(e){this.state.moves.computer=e}getComputerMove(){return this.state.moves.computer}chooseComputerMove(){let t=Math.floor(Math.random()*e.length);this.setComputerMove(e[t].name)}getRoundNumberFromStorage(){return parseInt(localStorage.getItem("roundNumber")||"1",10)}getRoundNumber(){return this.state.roundNumber}setRoundNumber(e){this.state.roundNumber=e,localStorage.setItem("roundNumber",e.toString())}increaseRoundNumber(){this.setRoundNumber(this.getRoundNumber()+1)}}class o{constructor(){this.messageEl=document.getElementById("message"),this.playerScoreEl=document.getElementById("player-score"),this.computerScoreEl=document.getElementById("computer-score"),this.movesEl=document.getElementById("round-moves"),this.resultEl=document.getElementById("round-result")}updateMessage(e){this.messageEl&&(this.messageEl.textContent=e)}toggleStartButton(e){let t=document.getElementById("start-game");t&&(t.style.display=e?"inline":"none")}updateRound(e){let t=document.getElementById("round");t&&(t.textContent=`Round ${e}`,t.style.display="block")}showRoundOutcome(e,t,o){this.movesEl.textContent=`You played ${e}. Computer played ${t}.`,this.resultEl.textContent=o.toUpperCase(),this.movesEl.style.display="block",this.resultEl.style.display="block"}toggleMoveButtons(e){["rock","paper","scissors"].forEach(t=>{let o=document.getElementById(t);o&&(o.style.display=e?"inline":"none")})}togglePlayAgain(e){let t=document.getElementById("play-again");t&&(t.style.display=e?"inline-block":"none")}resetForNextRound(){this.toggleMoveButtons(!0),this.togglePlayAgain(!1),this.movesEl.style.display="none",this.resultEl.style.display="none"}updateScores(e,t){this.playerScoreEl&&(this.playerScoreEl.textContent=e.toString()),this.computerScoreEl&&(this.computerScoreEl.textContent=t.toString())}}class s{constructor(e,t){this.model=e,this.view=t}startGame(){this.view.toggleStartButton(!1),this.view.toggleMoveButtons(!0),this.view.updateRound(this.model.getRoundNumber())}updateScoreView(){this.view.updateScores(this.model.getScore("player"),this.model.getScore("computer"))}handleNextRound(){this.model.increaseRoundNumber(),this.view.updateRound(this.model.getRoundNumber()),this.view.resetForNextRound()}initialize(){var t,o;this.view.updateMessage("Rock, Paper, Scissors, Tara"),this.updateScoreView(),this.view.toggleMoveButtons(!1),this.view.togglePlayAgain(!1),this.view.toggleStartButton(!0),null===(t=document.getElementById("start-game"))||void 0===t||t.addEventListener("click",()=>this.startGame()),null===(o=document.getElementById("play-again"))||void 0===o||o.addEventListener("click",()=>this.handleNextRound()),e.map(e=>e.name).forEach(e=>{var t;null===(t=document.getElementById(e))||void 0===t||t.addEventListener("click",()=>this.handlePlayerMove(e))})}handlePlayerMove(e){this.model.setPlayerMove(e),this.model.chooseComputerMove();let t=this.model.getPlayerMove(),o=this.model.getComputerMove(),s=this.model.evaluateRound();this.view.showRoundOutcome(t,o,s),this.view.toggleMoveButtons(!1),this.view.togglePlayAgain(!0),this.updateScoreView()}}document.addEventListener("DOMContentLoaded",()=>{new s(new t,new o).initialize()});
//# sourceMappingURL=public.6a1f19bf.js.map
